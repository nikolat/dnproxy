<?xml version="1.0"?>
<doc>
    <assembly>
        <name>dngen</name>
    </assembly>
    <members>
        <member name="T:D.N.Compiler">
            <summary>
            .NET言語のソースコードをコンパイルします。
            </summary>
            <remarks>
            .NET言語のソースコードを動的にコンパイルする機能を提供します。
            </remarks>
        </member>
        <member name="F:D.N.Compiler.assembly">
            <summary>
            コンパイルされたアセンブリへの参照を保持します。
            </summary>
        </member>
        <member name="F:D.N.Compiler.pathToAssembly">
            <summary>
            コンパイルされたアセンブリのパスを保持します。
            </summary>
        </member>
        <member name="F:D.N.Compiler.language">
            <summary>
            コンパイルされるアセンブリのソースの言語を保持します。
            </summary>
        </member>
        <member name="F:D.N.Compiler.sourceFiles">
            <summary>
            コンパイルされるソースファイル名を保持します。
            </summary>
        </member>
        <member name="F:D.N.Compiler.config">
            <summary>
            コンパイル時のパラメタを保持します。
            </summary>
        </member>
        <member name="F:D.N.Compiler.configFile">
            <summary>
            コンパイル設定を記述したファイルを保持します。
            </summary>
        </member>
        <member name="M:D.N.Compiler.AddFiles(System.String,System.String[],System.Boolean)">
            <summary>
            <c>list</c>に渡されたフォルダ・ファイルリストをフルパスにしてyieldで返します。
            </summary>
            <param name="basedir">ファイルを検索する基準ディレクトリ。</param>
            <param name="list">検索するファイルのリスト。</param>
            <param name="searchGac">GACフォルダを検索対称に含む場合、true。含まない場合、false。</param>
            <returns></returns>
        </member>
        <member name="M:D.N.Compiler.CompilerParametersFromFile">
            <summary>
            <c>CompilerParameters</c>クラスをコンパイル設定ファイルから生成し返します。
            </summary>
            <remarks>
            先に<c>ConfigFile</c>プロパティにコンパイル設定ファイルを指定しておく必要があります。
            </remarks>
            <returns>生成後の<c>CompilerParameters</c>クラス。</returns>
        </member>
        <member name="M:D.N.Compiler.CompilerParametersFromFile(System.String)">
            <summary>
            <c>CompilerParameters</c>をコンパイル設定ファイルから生成し返します。
            </summary>
            <param name="config">コンパイル設定ファイルのパス。</param>
            <returns>生成後の<c>CompilerParameters</c>クラス。</returns>
        </member>
        <member name="M:D.N.Compiler.Execute">
            <summary>
            コンパイル設定ファイルから得た情報を元にコンパイルします。
            </summary>
            <remarks>
            コンパイル設定ファイルから得た情報を元にコンパイルします。パスは設定ファイルの位置に依存します。
            コンパイル設定ファイルの仕様に関してはコンパイル設定ファイルを参照してください。
            </remarks>
            <returns>コンパイルの成功時には、true。</returns>
        </member>
        <member name="M:D.N.Compiler.Execute(System.String,System.String,System.CodeDom.Compiler.CompilerParameters)">
            <summary>
            パラメタを指定してコンパイルを実行します。
            </summary>
            <remarks>
            パラメタを指定してコンパイルを実行します。
            ソースファイルが単数の場合に呼ばれます。
            </remarks>
            <param name="language">コンパイルするソースの言語。</param>
            <param name="souceFiles">コンパイルするソースファイル。</param>
            <param name="cp">コンパイルパラメタ。</param>
            <returns>コンパイルの成功時には、true。</returns>
        </member>
        <member name="M:D.N.Compiler.Execute(System.String,System.String[],System.CodeDom.Compiler.CompilerParameters)">
            <summary>
            パラメタを指定してコンパイルを実行します。
            </summary>
            <remarks>
            パラメタを指定してコンパイルを実行します。
            ソースファイルが複数の場合に呼ばれます。
            </remarks>
            <param name="souceFiles">コンパイルするソースファイル。</param>
            <param name="language">コンパイルするソースの言語。</param>
            <param name="cp">コンパイルパラメタ。</param>
            <returns>コンパイルの成功時には、true。</returns>
        </member>
        <member name="P:D.N.Compiler.Assembly">
            <summary>
            コンパイルされたアセンブリへの参照を返します。
            </summary>
            <value>コンパイルされたアセンブリへの参照。</value>
        </member>
        <member name="P:D.N.Compiler.PathToAssembly">
            <summary>
            コンパイルされたアセンブリのパスを返します。
            </summary>
            <value>コンパイルされたアセンブリのパス。</value>
        </member>
        <member name="P:D.N.Compiler.Language">
            <summary>
            コンパイルされるアセンブリのソースの言語を返します。
            </summary>
            <value>コンパイルされたアセンブリのソースの言語。</value>
        </member>
        <member name="P:D.N.Compiler.SourceFiles">
            <summary>
            コンパイルされるソースファイル名を返します。
            </summary>
            <value>コンパイルされたソースファイル名</value>
        </member>
        <member name="P:D.N.Compiler.Config">
            <summary>
            コンパイル時のパラメタを返します。
            </summary>
            <value>コンパイル時のパラメタ。</value>
        </member>
        <member name="P:D.N.Compiler.ConfigFile">
            <summary>
            コンパイル設定を記述したファイル名を設定します。
            </summary>
            <value>コンパイル設定を記述したファイル名。</value>
        </member>
        <member name="T:D.N.Generator">
            <summary>
            アセンブリの生成処理クラスです。
            </summary>
        </member>
        <member name="M:D.N.Generator.configSettingsElement(System.Xml.XmlDocument)">
            <summary>
            設定ファイルのアプリケーション設定にアクセスするパスを返します。
            </summary>
            <param name="doc">設定ファイルのXMLドキュメント。</param>
            <returns>設定ファイルのアプリケーション設定にアクセスするパス。</returns>
        </member>
        <member name="M:D.N.Generator.getAssemblyData(System.Xml.XmlElement,System.String)">
            <summary>
            設定ファイルのアプリケーション設定を取得します。
            </summary>
            <param name="element">アプリケーション設定のXMLエレメント。</param>
            <param name="key">取得したい設定名。</param>
            <returns><c>key</c>で示される設定値。見つからない場合には、null。</returns>
        </member>
        <member name="M:D.N.Generator.load(System.IntPtr,System.Int32)">
            <summary>
            アプリケーション構成ファイルを元にロガーの初期設定をします。
            </summary>
            <param name="h">アプリケーション構成ファイルのパス文字列を格納したメモリへのポインタ。</param>
            <param name="len">アプリケーション構成ファイルのパス文字列の長さ。</param>
            <returns>処理成功時には、true。</returns>
        </member>
        <member name="M:D.N.Generator.execute(System.IntPtr,System.Int32@)">
            <summary>
            アセンブリをコンパイルします。
            </summary>
            <remarks>
            キャッシュより新しいファイルを見つけた場合アセンブリをコンパイルします。
            見つからなかった場合何も処理しません。
            </remarks>
            <param name="h">コンパイラ設定ファイルのパス文字列を格納したメモリへのポインタ。</param>
            <param name="len">コンパイラ設定ファイルのパス文字列の長さ。</param>
            <returns>ゼロポインタ。</returns>
        </member>
        <member name="T:D.N.Logger">
            <summary>
            ログを集中的に管理するためのクラスです。
            </summary>
            <remarks>
            ログを集中的に管理するためのクラスです。
            このクラスのインスタンスを作成することはできません。
            プログラムの最初にInitializeを呼び初期化する必要があります。
            また、プログラムの最後にFinalizeを呼び終了処理を行ってください。
            </remarks>
        </member>
        <member name="F:D.N.Logger.CLASSNAME_CHECKTOOL">
            <summary>
            チェックツールのウィンドウクラス名を保持します。
            </summary>
        </member>
        <member name="F:D.N.Logger.basedir">
            <summary>
            ログ取り用の基準ディレクトリを保持します。
            </summary>
        </member>
        <member name="F:D.N.Logger.logpath">
            <summary>
            ログファイルのパスを保持します。
            </summary>
        </member>
        <member name="F:D.N.Logger.writer">
            <summary>
            ログの書き込みストリームを保持します。
            </summary>
        </member>
        <member name="F:D.N.Logger.encode">
            <summary>
            ログのエンコード情報を保持します。
            </summary>
        </member>
        <member name="F:D.N.Logger.initialized">
            <summary>
            初期化済みかどうか確認するためのフラグです。
            </summary>
        </member>
        <member name="F:D.N.Logger.finalized">
            <summary>
            終了処理済みかどうか確認するためのフラグです。
            </summary>
        </member>
        <member name="F:D.N.Logger.logFile">
            <summary>
            ログファイル名を保持します。
            </summary>
        </member>
        <member name="F:D.N.Logger.logType">
            <summary>
            ログの取り方を保持します。
            </summary>
        </member>
        <member name="F:D.N.Logger.logLevel">
            <summary>
            ログ書き込み対象にするレベルを保持します。
            </summary>
        </member>
        <member name="F:D.N.Logger.logCharset">
            <summary>
            ログの文字コードを保持します。
            </summary>
        </member>
        <member name="F:D.N.Logger.hlogrcvWnd">
            <summary>
            チェックツールのウィンドウハンドルを保持します。
            </summary>
        </member>
        <member name="M:D.N.Logger.FindWindow(System.String,System.String)">
            <summary>
            ウィンドウを検索します。
            </summary>
            <remarks>
            チェックツールウィンドウの検索に使用します。Win32APIです。
            </remarks>
            <param name="lpClassName">ウィンドウクラスネーム</param>
            <param name="lpWindowName">ウィンドウネーム</param>
            <returns>ウィンドウハンドル</returns>
        </member>
        <member name="M:D.N.Logger.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,D.N.Logger.COPYDATASTRUCT@)">
            <summary>
            ウィンドウメッセージを送信します。
            </summary>
            <remarks>
            チェックツールウィンドウへのメッセージ送信に使用します。Win32APIです。
            </remarks>
            <param name="hWnd">チェックツールのウィンドウハンドル</param>
            <param name="Msg">メッセージ (WM_COPYDATAを指定すること)</param>
            <param name="wParam">常にIntPtr.Zeroを指定する</param>
            <param name="lParam">送信するメッセージを含む構造体</param>
            <returns>メッセージの処理結果</returns>
            <seealso cref="T:D.N.Logger.COPYDATASTRUCT"/>
        </member>
        <member name="F:D.N.Logger.WM_COPYDATA">
            <summary>
            チェックツールへの送信用メッセージコードです。
            </summary>
        </member>
        <member name="M:D.N.Logger.Initialize">
            <summary>
            初期化処理を行います。
            </summary>
            <remarks>
            基準ディレクトリは現在のアプリケーションドメインのベースディレクトリになります。
            </remarks>
            <returns>処理成功時には、true。</returns>
        </member>
        <member name="M:D.N.Logger.Initialize(System.String)">
            <summary>
            初期化処理を行います。
            </summary>
            <remarks>
            ログの設定を初期化し、チェックツールに開始メッセージを送ります。
            </remarks>
            <param name="basedir">ログファイルの基準ディレクトリ。</param>
            <returns>処理成功時には、true。</returns>
        </member>
        <member name="M:D.N.Logger.Finalize">
            <summary>
            終了処理を行います。
            </summary>
            <remarks>
            ログ用のストリームを解放し、チェックツールに終了メッセージを送ります。
            </remarks>
            <returns>処理成功時には、true。</returns>
        </member>
        <member name="M:D.N.Logger.TypeReplaceToTama(D.N.Logger.Level)">
            <summary>
            Level型からTamaMode型の同等の値への変換します。
            </summary>
            <remarks>
            チェックツールへの送信時、内部の型から変換するために使われます。
            </remarks>
            <param name="level">ログの警告レベル。</param>
            <returns>levelと同等のTamaMode型の値。</returns>
        </member>
        <member name="M:D.N.Logger.SendLogToWnd(System.String,D.N.Logger.TamaMode)">
            <summary>
            チェックツールにメッセージを送信します。
            </summary>
            <param name="str">チェックツールに表示させたい文字列。</param>
            <param name="mode">ログのモード。</param>
        </member>
        <member name="M:D.N.Logger.WriteLine(D.N.Logger.Level,System.String)">
            <summary>
            ログを書き込みます。改行が付加されます。
            </summary>
            <remarks>
            ログを書き込みます。改行が付加されます。
            </remarks>
            <param name="level">書き込みの警告レベル。</param>
            <param name="value">書き込む文字列。</param>
        </member>
        <member name="M:D.N.Logger.Write(D.N.Logger.Level,System.String)">
            <summary>
            ログを書き込みます。
            </summary>
            <remarks>
            ログを書き込みます。
            </remarks>
            <param name="level">書き込みの警告レベル。</param>
            <param name="value">書き込む文字列。</param>
        </member>
        <member name="P:D.N.Logger.LogFile">
            <summary>
            ログファイル名を指定します。
            </summary>
            <value>ログファイル名。</value>
        </member>
        <member name="P:D.N.Logger.LogType">
            <summary>
            ログの取り方を設定します。
            </summary>
            <remarks>
            0では、ログを取りません,
            1では、チェックツールのみにログを表示ます。
            チェックツールを起動していない場合はログを取りません。
            2では、チェックツールが存在しない場合はファイルに書き込みます。
            </remarks>
            <value>ログの取り方。</value>
        </member>
        <member name="P:D.N.Logger.LogLevel">
            <summary>
            ログ書き込み時に書き込み対象にする警告レベルを設定します。
            </summary>
            <remarks>
            NONE:何も書き込まれません。
            ALL:以下の全てに当てはまります。
            FATAL:継続不可能なエラーの書き込みを許可します。
            ERROR:回復可能なエラーの書き込みを許可します。
            WARNING:警告の書き込みを許可します。
            NOTICE:注記の書き込みを許可します。
            INFO:情報の書き込みを許可します。
            </remarks>
            <value>ログの書き込み対象とする警告レベル。</value>
        </member>
        <member name="P:D.N.Logger.LogLevelString">
            <summary>
            ログ書き込み時に書き込み対象にする警告レベルを文字列で設定します。
            </summary>
            <remarks>
            <para>
            複数のレベルを指定する場合は、パイプ|で区切ってください。
            また、複数のレベルが指定されている場合は、パイプで区切られた文字列で返されます。
            </para>
            NONE:何も書き込まれません。
            ALL:以下の全てに当てはまります。
            FATAL:継続不可能なエラーの書き込みを許可します。
            ERROR:回復可能なエラーの書き込みを許可します。
            WARNING:警告の書き込みを許可します。
            NOTICE:注記の書き込みを許可します。
            INFO:情報の書き込みを許可します。
            </remarks>
            <value>ログの書き込み対象とする警告レベルを示す|（パイプ）で区切られた文字列。</value>
        </member>
        <member name="P:D.N.Logger.LogCharset">
            <summary>
            ログの文字コードを設定します。
            </summary>
            <remarks>
            SJIS: SJIS文字コードで書き込みます。
            UTF8: UTF-8文字コードで書き込みます。
            DEFAULT: システムのデフォルト文字コードで書き込みます。
            </remarks>
            <value>ログの文字コード。</value>
        </member>
        <member name="P:D.N.Logger.LogCharsetString">
            <summary>
            ログの文字コードを文字列で設定します。
            </summary>
            <remarks>
            Shift_JIS:
            SJIS: SJIS文字コードで書き込みます。
            UTF8:
            UTF-8: UTF-8文字コードで書き込みます。
            それ以外の文字コードが設定された場合は、システムのデフォルト文字コードになります。
            </remarks>
            <value>ログの文字コードを示す文字列。</value>
        </member>
        <member name="P:D.N.Logger.HlogrcvWnd">
            <summary>
            チェックツールのウィンドウハンドルを設定します。
            </summary>
            <value>チェックツールのウィンドウハンドル。</value>
        </member>
        <member name="T:D.N.Logger.Level">
            <summary>
            書き込み時の警告レベルを指定します。
            </summary>
            <remarks>
            設定時には複数をビット演算（論理和）で加算できます。
            ALLは、書き込み時には指定できません。
            </remarks>
        </member>
        <member name="F:D.N.Logger.Level.NONE">
            <summary>
            ログを取りません。主に初期化に用います。
            </summary>
        </member>
        <member name="F:D.N.Logger.Level.FATAL">
            <summary>
            致命的なエラーの発生を示します。
            </summary>
        </member>
        <member name="F:D.N.Logger.Level.ERROR">
            <summary>
            回復可能なエラーの発生を示します。
            </summary>
        </member>
        <member name="F:D.N.Logger.Level.WARNING">
            <summary>
            警告の発生を示します。
            </summary>
        </member>
        <member name="F:D.N.Logger.Level.NOTICE">
            <summary>
            注意を喚起します。
            </summary>
        </member>
        <member name="F:D.N.Logger.Level.INFO">
            <summary>
            情報を提供します。
            </summary>
        </member>
        <member name="F:D.N.Logger.Level.ALL">
            <summary>
            全ての警告レベルを表示するためのフラグです。
            ログの書き込み時には用いません。
            </summary>
        </member>
        <member name="T:D.N.Logger.Charset">
            <summary>
            ログ用の文字コードを設定します。
            </summary>
            <remarks>
            ログの書き込みに使われる文字コードを設定します。
            </remarks>
        </member>
        <member name="F:D.N.Logger.Charset.SJIS">
            <summary>
            文字コードをShift_JISに設定します。
            </summary>
        </member>
        <member name="F:D.N.Logger.Charset.UTF8">
            <summary>
            文字コードをUTF-8に設定します。
            </summary>
        </member>
        <member name="F:D.N.Logger.Charset.DEFAULT">
            <summary>
            文字コードをシステムの文字コードに設定します。
            </summary>
        </member>
        <member name="T:D.N.Logger.TamaMode">
            <summary>
            玉送信用のログの付加情報を設定します。
            </summary>
            <remarks>
            玉にメッセージを送信する時にしか使われません。
            </remarks>
        </member>
        <member name="F:D.N.Logger.TamaMode.INFO">
            <summary>
            標準のメッセージ
            </summary>
        </member>
        <member name="F:D.N.Logger.TamaMode.FATAL">
            <summary>
            フェータルエラー
            </summary>
        </member>
        <member name="F:D.N.Logger.TamaMode.ERROR">
            <summary>
            エラー
            </summary>
        </member>
        <member name="F:D.N.Logger.TamaMode.WARNING">
            <summary>
            ワーニング
            </summary>
        </member>
        <member name="F:D.N.Logger.TamaMode.NOTICE">
            <summary>
            注記
            </summary>
        </member>
        <member name="F:D.N.Logger.TamaMode.END">
            <summary>
            ログの終了
            </summary>
        </member>
        <member name="F:D.N.Logger.TamaMode.SJIS">
            <summary>
            SJIS
            </summary>
        </member>
        <member name="F:D.N.Logger.TamaMode.UTF8">
            <summary>
            UTF-8
            </summary>
        </member>
        <member name="F:D.N.Logger.TamaMode.DEFAULT">
            <summary>
            OSデフォルトのコード
            </summary>
        </member>
        <member name="T:D.N.Logger.COPYDATASTRUCT">
            <summary>
            チェックツールへの送信に使用する構造体です。
            </summary>
            <see cref="M:D.N.Logger.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,D.N.Logger.COPYDATASTRUCT@)"/>
        </member>
        <member name="F:D.N.Logger.COPYDATASTRUCT.dwData">
            <summary>
            チェックツールへのコマンドや警告レベルを設定します。TamaMode列挙体をIntPtrにキャストしてください。
            </summary>
        </member>
        <member name="F:D.N.Logger.COPYDATASTRUCT.cbData">
            <summary>
            ワイド文字に変換した時の文字の長さを指定します。すなわち(文字数 + 1) * 2です。
            </summary>
        </member>
        <member name="F:D.N.Logger.COPYDATASTRUCT.lpData">
            <summary>
            表示させたい文字列を指定します。LPWSTR型に変換されます。
            </summary>
        </member>
    </members>
</doc>
